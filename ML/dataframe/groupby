
import pandas as pd
import numpy as np

path = 'C:/Users/mehedee/Documents/Python Scripts/office/product_sale_count_prediction/20201124/data_preprocess/'


dfr = pd.read_csv(path+'/full_prediction20210104.csv',dtype= {'pid': str})


print(dfr)

dfr['error'] = np.abs(np.array(dfr['yhat'])-np.array(dfr['real']))

error = dfr.groupby(by=['pid'], dropna=False,as_index=False)['error'].mean()

count = dfr.groupby(by=['pid'], dropna=False,as_index=False)['error'].count()



pidlist = ['4901033635060','4930726100080','0021000615506','4571268290640','4582409182229','4903308007657','4903050168859','4901870116159','4902087155481','4972050011168','4901520144778','4930726100219','4903080120261','4902165598230','4901001131372','4901870123904','4901001281749','4901001284559','4903308030310','4903308007633','4903050168279','4902130322020','4901360317226','4901870734056','4901520145140','4902150653050','4902150658321','4972050010437','4902150653074','4901001140367','4902705093713','4903050503810','4901520118809','4902165583151','4902087155665','4902110338133','4902110357882','4903050505098','4901001150564','4903050502974','4902130388743','4902720123211','4901870115404','4903050100781','4901870124246','4902170558526','4571268297113','4902150655757','4901520131884','4902150657263','4901870122952','4930726100486','4902130390418','4930726001332','4902115349813','3161717000503','4902150659960','4902165583137','4930726100233','4930726000878','4902110310320','4903050506880','4571268298462','4903050168286','4902165583175','4903050502516','4930726100196','4902170558601','4571268297779','4902705100176','4902165542868','4902521009387','4903050101122','49721683','4903050167524','4902130390401','4901520144754','4902130312113','4902150660676','4901033630041','4902150657102','4972050006607','4903308030327','4902130361470','4901520142743','4930726100318','4970208030238','4903050167227','3161717010045','45161261','4902150659571','4901085162477','4901520113866','4571268297427','4930726100349','4902165542677','4901870734841','4903050167944','49720761','4902165542752','49838985','4901001201211','4902165380460','4903080301271','4901870734360','4901870736067','4902150660768','4901033630690','4908851950061','4901870121610','4901520113873','4908851950108','4901870735862','4902110303803','4902130331169','4571268296918','4902150653104','4902110303810','4903050503827','4571268297632','4901870122648','4903050502967','4571268290626','4902110303827','4903050100286','4901870733219','4902150657287','49721348','4902165136869','4903050502769','4902188022095','4901870122938','4903308030235','4901870122754','4902150659885','4902705094796','4902170555174','4902150659953','4902087155122','49838725','4901870122945','4903050167951','4901870122969','4902130332517','4902130388620','4901870734728','4902188022040','4903050168293','4902150653067','4902130331145','4902130390425','4902165380910','4902165146011','49721317','4902115308452','4901001234868','4902115096311','49839012','4930726100301','4902150659205','4902130389986','4908851950337','49720679','4901001359417','4970208060020','4571268298530','4903050502752','4903050505166','4903050502950','4902705111905','4903050501120','4902150660430','49838718','4901870123898','4901520118847','4571268297762','4571280841011','4903050100330','4901033635039','4901520132225','4571268297410','4902150655719','4901001310296','4903080301257','4901870735367','4902150653715','4901520122578','4902130311581','4902705093720','49838893','4901870122839','4901870122792','4901520131914','4902165147360','4902165119756','4901033631062','4902115096298','4901001361243','4902170558588','4908851950238','4901033631307','4902115001469','4902130391323']

for index ,row in pd.DataFrame(dfr.groupby(['pid'],as_index=False).mean()).iterrows():
    if str(row['pid']) not in pidlist:
        print(row['pid'],' false')
        


len([row['pid'] for index,row in pd.DataFrame(dfr.groupby(['pid'],as_index=False).mean()).iterrows() if row['pid'] not in pidlist])



error_avg = []
for index,row in error.iterrows() :
    
        
    mulcol = count[count['pid'] == row['pid']].error.values[0]
    
    
    error_avg.extend([row['error']]*mulcol)
    
dfr['avg_error'] = error_avg



dfr.to_csv(path+'result_error.csv')
